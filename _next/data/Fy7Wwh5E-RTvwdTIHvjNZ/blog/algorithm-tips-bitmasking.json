{"pageProps":{"post":{"mdxSource":"var Component=(()=>{var t=Object.create;var l=Object.defineProperty;var o=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var i=a=>l(a,\"__esModule\",{value:!0});var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),u=(a,s)=>{i(a);for(var c in s)l(a,c,{get:s[c],enumerable:!0})},g=(a,s,c)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let n of m(s))!p.call(a,n)&&n!==\"default\"&&l(a,n,{get:()=>s[n],enumerable:!(c=o(s,n))||c.enumerable});return a},_=a=>g(i(l(a!=null?t(h(a)):{},\"default\",a&&a.__esModule&&\"default\"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);var r=N((j,d)=>{d.exports=_jsx_runtime});var f={};u(f,{default:()=>x,frontmatter:()=>k});var e=_(r()),k={title:\"Algorithm - Bitmasking\",date:\"2022-02-08\",tags:[\"algorithm\",\"bitmasking\"],draft:!0,summary:\"C++ tips for bitmasking\",images:[],layout:\"PostLayout\"};function b(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(c,{})})):c();function c(){let n=Object.assign({h3:\"h3\",a:\"a\",span:\"span\",pre:\"pre\",code:\"code\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h3,{id:\"what-is-bitmasking\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#what-is-bitmasking\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"What is Bitmasking\"]}),(0,e.jsxs)(n.h3,{id:\"example-problem\",children:[(0,e.jsx)(n.a,{\"aria-hidden\":\"true\",href:\"#example-problem\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Example Problem\"]}),(0,e.jsx)(n.pre,{children:(0,e.jsxs)(n.code,{className:\"code-highlight language-c++\",children:[(0,e.jsx)(n.span,{className:\"code-line\",children:`#include <algorithm>\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`#include <iostream>\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`#include <queue>\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`#include <set>\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`#include <string>\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`#include <vector>\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`using namespace std;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`int N;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`void init() {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  ios::sync_with_stdio(false);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  cin.tie(NULL);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  cout.tie(NULL);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`void get_bitmask(int n) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  // \\uD2B9\\uC815 bit\\uAC00 masking\\uB418\\uC5B4 \\uC788\\uB294\\uC9C0 \\uC54C\\uC544\\uB0B4\\uB294 \\uBC29\\uBC95 a &= (1<<1)\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  for (int i = 29; i >= 0; i--) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    int result = n & (1 << i) ? 1 : 0;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    cout << result;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  }\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  cout << \"\\\\n\";\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`void get_bitmask_2(int n) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  vector<int> res;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  while (n != 0) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    res.push_back(n % 2);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    n /= 2;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  }\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  while (!res.empty()) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    int last = res.back();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    res.pop_back();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`    cout << last;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  }\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  cout << \"\\\\n\";\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`int main(void) {\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  init();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  clock_t start, end;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  int n = 999999999;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  start = clock();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  get_bitmask(n);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  end = clock();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  printf(\"max_index: %0.8f sec\\\\n\", ((float)end - start) / CLOCKS_PER_SEC);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  start = clock();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  get_bitmask_2(n);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  end = clock();\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  printf(\"max_index: %0.8f sec\\\\n\", ((float)end - start) / CLOCKS_PER_SEC);\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`  return 0;\n`}),(0,e.jsx)(n.span,{className:\"code-line\",children:`}\n`})]})})]})}}var x=b;return f;})();\n;return Component;","toc":[{"value":"What is Bitmasking","url":"#what-is-bitmasking","depth":3},{"value":"Example Problem","url":"#example-problem","depth":3}],"frontMatter":{"readingTime":{"text":"2 min read","minutes":1.125,"time":67500,"words":225},"slug":"algorithm-tips-bitmasking","fileName":"algorithm-tips-bitmasking.mdx","title":"Algorithm - Bitmasking","date":"2022-02-08T00:00:00.000Z","tags":["algorithm","bitmasking"],"draft":true,"summary":"C++ tips for bitmasking","images":[],"layout":"PostLayout"}},"authorDetails":[{"readingTime":{"text":"1 min read","minutes":0.4,"time":24000,"words":80},"slug":["default"],"fileName":"default.md","name":"WOODI","avatar":"/static/images/avatar.png","occupation":"Undergraduate of Chung-Ang Univ.","company":"Chung-Ang Univ.","email":"woodi.daily@gmail.com","linkedin":"https://www.linkedin.com/in/%EB%8F%99%EC%9A%B1-%EA%B9%80-112973188/","github":"https://github.com/woodi97","date":null}],"prev":{"title":"Ways to Optimize your React/Nextjs Application","date":"2022-02-07T00:00:00.000Z","tags":["react-js","next-js","optimization"],"draft":false,"summary":"apply tree-shaking & constate on my app","images":["/static/images/blog/ways-to-optimize-your-nextjs-application/optimized.png"],"layout":"PostLayout","slug":"ways-to-optimize-your-nextjs-application"},"next":null},"__N_SSG":true}